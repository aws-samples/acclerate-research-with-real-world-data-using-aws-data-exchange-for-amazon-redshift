Parameters:
  CodeS3Bucket:
    Type: String
    Description: The name of the S3 bucket containing the Lambda function's source code

  CodeS3Key:
    Type: String
    Description: The key of the S3 object representing the Lambda function's source code

  SubnetIds:
    Description: The IDs of the subnets where the AWS Lambda function will be deployed
    Type: List<AWS::EC2::Subnet::Id>

  SecurityGroupIds:
    Description: The IDs of the Security Groups associated with VPC
    Type: List<AWS::EC2::SecurityGroup::Id>

  RedshiftIAMRole:
    Type: String
    Description: The IAM role ARNused by Amazon Redshift to access other AWS services

  RedshiftHost:
    Type: String
    Description: The endpoint or hostname of the Redshift Cluster

  RedshiftPort:
    Type: Number
    Description: The port of the Redshift Cluster
    Default: 5439

  RedshiftUser:
    Type: String
    Description: The username used to authenticate and connect to the Redshift Cluster
    Default: admin
    AllowedPattern: "[a-zA-Z][a-zA-Z_0-9+.@-]*"

  RedshiftPassword:
    Type: String
    Description: The password used to authenticate and connecto to the Redshift Cluster
    NoEcho: true
    MinLength: 8
    MaxLength: 64
    AllowedPattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[^\\x00-\\x20\\x22\\x27\\x2f\\x40\\x5c\\x7f-\\uffff]+"

  RedshiftDatabase:
    Type: String
    Default: dev
    MaxLength: 127
    AllowedPattern: "[a-zA-Z][a-zA-Z_0-9+.@-]*"

Resources:
  Function:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref CodeS3Bucket
        S3Key: !Ref CodeS3Key
      Environment:
        Variables:
          REDSHIFT_IAM_ROLE: !Ref RedshiftIAMRole
          REDSHIFT_HOST: !Ref RedshiftHost
          REDSHIFT_PORT: !Ref RedshiftPort
          REDSHIFT_USER: !Ref RedshiftUser
          REDSHIFT_PASSWORD: !Ref RedshiftPassword
          REDSHIFT_DATABASE: !Ref RedshiftDatabase
      FunctionName: copy-from-s3-to-redshift
      Handler: lambda_function.lambda_handler
      Role: !GetAtt FunctionRole.Arn
      Runtime: python3.9
      Timeout: 300
      VpcConfig:
        SubnetIds: !Ref SubnetIds
        SecurityGroupIds: !Ref SecurityGroupIds

  FunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "copy-from-s3-to-redshift-lambda-${AWS::Region}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow 
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole

  FunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Function}"
      RetentionInDays: 7

Outputs:
  FunctionName:
    Description: The name of the created Lambda Function
    Value: !Ref Function

  FunctionArn:
    Description: The ARN of the created Lambda Function
    Value: !GetAtt Function.Arn